import cv2
import numpy as np

def robert_filter(image_path):
    # Read the image in grayscale and resize
    image = cv2.imread(image_path, cv2.IMREAD_GRAYSCALE)
    image = cv2.resize(image,(400,400))

    # Define the Robert kernels for horizontal and vertical edges
    kernel_x = np.array([[1, 0], [0, -1]])
    kernel_y = np.array([[0, 1], [-1, 0]])

    # Apply the Robert filter for horizontal and vertical edges
    edges_x = cv2.filter2D(image, -1, kernel_x)
    edges_y = cv2.filter2D(image, -1, kernel_y)

    # Combine the horizontal and vertical edges
    edges = np.abs(edges_x) + np.abs(edges_y)

    # Convert the result to uint8 (8-bit) for display
    edges = np.uint8(edges)

    # Display the original and filtered images
    cv2.imshow('Original Image', image)
    cv2.imshow('Robert Filter', edges)
    cv2.waitKey(0)
    cv2.destroyAllWindows()

# Specify the path to your image
image_path = r"C:\Users\somaa\Desktop\DIP Lab\DIP week 1.jpg"

# Apply the Robert filter for edge detection and display the results
robert_filter(image_path)

